#!/bin/bash

function print_prompt
{
	cat << CONFEOF
Usage: $0 [OPTION]... [VAR=VALUE]...

Configuration:
    --help                      display this help and exit
    --debug                     build for debug
    --build-dir=DIR             build directory
    --build-demo                toggle for build demo
    --prefix=PREFIX             install prefix
    --cmake-modules=DIR         directory of cmake modules file exist
    --find-root-path=DIR        root dir for search dependencies libs
    --asr2nlp-workaround        toggle asr2nlp workaround

Dependencies:
    --mutils=DIR                specify mutils install dir
    --flora=DIR                 specify flora install dir
    --speech=DIR                specify speech install dir

Cross Compile:
    --toolchain=DIR             toolchain install dir
    --cross-prefix=PREFIX       compiler name prefix
CONFEOF
}

builddir="build"
cmake_modules_dir="cmake"

CMAKE_ARGS=
for conf_opt
do
	case $conf_opt in
		*=?*) conf_optarg=`expr "X$conf_opt" : '[^=]*=\(.*\)'` ;;
		*) conf_optarg= ;;
	esac

	case $conf_opt in
		--help)
			print_prompt
			exit 0
			;;
		--debug)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DBUILD_DEBUG=ON)
			;;
		--build-dir=*)
			builddir=$conf_optarg
			;;
		--prefix=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DCMAKE_INSTALL_PREFIX=$conf_optarg)
			;;
		--build-demo)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DBUILD_DEMO=ON)
			;;
		--asr2nlp-workaround)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DASR2NLP_WORKAROUND=ON)
			;;
		--cmake-modules=*)
			cmake_modules_dir=$conf_optarg
			;;
		--find-root-path=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DCMAKE_FIND_ROOT_PATH=$conf_optarg)
			;;
		--mutils=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DmutilsPrefix=$conf_optarg)
			;;
		--flora=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DfloraPrefix=$conf_optarg)
			;;
		--speech=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DspeechPrefix=$conf_optarg)
			;;
		--toolchain=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DTOOLCHAIN_HOME=$conf_optarg)
			CROSS_COMPILE=yes
			;;
		--cross-prefix=*)
			CMAKE_ARGS=(${CMAKE_ARGS[@]} -DCROSS_PREFIX=$conf_optarg)
			;;
	esac
done

CUR_DIR=`pwd`
CMAKE_ARGS=(${CMAKE_ARGS[@]} -DCUSTOM_CMAKE_MODULES=$cmake_modules_dir)
if [ x$CROSS_COMPILE = x"yes" ]; then
CMAKE_ARGS=(${CMAKE_ARGS[@]} -DCMAKE_TOOLCHAIN_FILE=$cmake_modules_dir/toolchain.cmake)
fi

mkdir -p $builddir
cd $builddir
cmake $CUR_DIR \
	${CMAKE_ARGS[@]}
